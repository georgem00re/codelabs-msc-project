version: "3"

services:

  express-server:
    image: "codelabs-express-server"
    build: 
      context: "./express-server/"
    ports:
      - "5000:5000"
    volumes:
      - ${PWD}/express-server/public:/app/public
      - ${PWD}/express-server/index.js:/app/index.js
      - ${PWD}/express-server/package.json:/app/package.json
    depends_on:
      - user-interface
      - execution-service
      - matchmaking-service
    network_mode: "bridge"
    environment:
      IP_ADDRESS: ${IP_ADDRESS:-localhost}

  user-interface:
    image: "codelabs-user-interface"
    build:
      context: "./user-interface/"
    ports:
      - "3000:3000"
    volumes:
      - ${PWD}/user-interface/src:/app/src
      - ${PWD}/user-interface/package.json:/app/package.json
      - ${PWD}/user-interface/public:/app/public
    network_mode: "bridge"
    environment:
      REACT_APP_HOST_IP_ADDRESS: ${IP_ADDRESS:-localhost}

  socketio-server:
    image: "codelabs-socketio-server"
    build:
      context: "./socketio-server/"
    ports:
      - "0:7000"
    volumes:
      - ${PWD}/socketio-server/utils:/app/utils
      - ${PWD}/socketio-server/index.js:/app/index.js
      - ${PWD}/socketio-server/package.json:/app/package.json
    network_mode: "bridge"

  execution-service:
    image: "codelabs-execution-service"
    build:
      context: "./execution-service/"
    ports:
      - "4000:4000"
    volumes:
      - ${PWD}/execution-service/index.js:/app/index.js
      - ${PWD}/execution-service/package.json:/app/package.json
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: "bridge"

  matchmaking-service:
    image: "codelabs-matchmaking-service"
    build:
      context: "./matchmaking-service/"
    ports:
      - "10000:10000"
    volumes:
      - ${PWD}/matchmaking-service/index.js:/app/index.js
      - ${PWD}/matchmaking-service/package.json:/app/package.json
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: "bridge"

  # environment:
  #   - NODE_OPTIONS=--max-old-space-size=4096
  