
import styles from "./ShareButton.module.css";
import { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import PropTypes from "prop-types";

export default function ShareButton() {
	const colors = useSelector(state => state.color);
	const [color, setColor] = useState(colors.secondaryColor);
	const [dropdownVisible, setDropdownVisible] = useState(false);
	const [dropdownText, setDropdownText] = useState("Copy Link to Clipboard?")

	return (
		<button onClick={() => {
			navigator.clipboard.writeText(window.location.href);
			setDropdownText("Copied Link to Clipboard!");
		}} className={styles.button} onMouseEnter={() => {
			setColor(colors.primaryColor);
			setDropdownVisible(true);
		}} onMouseLeave={() => {
			setColor(colors.secondaryColor);
			setDropdownVisible(false);
			setDropdownText("Copy Link to Clipboard?")
		}}>
			<InviteIcon fill={color}/>
			<h1 style={{ color }}>Share</h1>
			<DropdownMenu visible={dropdownVisible} text={dropdownText}/>
		</button>
	)
}

function DropdownMenu(props) {

	const colors = useSelector(state => state.color);

	return (
		<div className={styles.dropdownMenu} style={{ display: props.visible == true ? "flex" : "none", backgroundColor: colors.tertiaryColor }}>
			<CopyIcon fill={colors.secondaryColor}/>
			<h1 style={{ color: colors.secondaryColor}}>{props.text}</h1>
		</div>
	)
}

DropdownMenu.propTypes = {
	visible: PropTypes.bool,
	text: PropTypes.string
}

function CopyIcon(props) {
	return (
		<svg width="300px" height="300px" viewBox="0 0 300 300" version="1.1" xmlns="http://www.w3.org/2000/svg">
	    	<title>ShareIcon</title>
	    	<g id="ShareIcon" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
	       		<path d="M123.962549,248.109956 C104.105822,267.96719 71.7723353,267.96719 51.8925455,248.086893 C32.0358182,228.22966 32.0358182,195.895349 51.8925455,176.038115 L102.929639,124.99972 C122.786367,105.142486 155.119853,105.142486 174.999643,125.022783 C175.530078,125.553231 176.060513,126.106743 176.567886,126.660255 C176.867697,126.913948 177.144446,127.167641 177.444257,127.444397 C178.251441,128.251601 178.920251,129.127995 179.450686,130.073577 C179.519873,130.165829 179.589061,130.235018 179.658248,130.32727 C179.635185,130.350333 179.635185,130.350333 179.612123,130.350333 C182.056738,134.962931 181.341803,140.82093 177.444257,144.695512 C173.523649,148.616221 167.619674,149.30811 163.007194,146.794244 C162.684321,147.140189 159.478647,143.957497 157.795092,142.250836 L157.772029,142.227773 C147.393949,131.849427 130.650645,131.780238 120.272565,142.135521 L69.1432216,193.289231 C58.7651411,203.667576 58.7651411,220.480495 69.1432216,230.85884 L69.166284,230.881903 C79.5443645,241.260248 96.3568549,241.260248 106.734935,230.881903 L137.523241,200.092813 C148.201133,205.328111 160.770141,205.512615 171.540283,200.554072 L123.962549,248.109956 L123.962549,248.109956 L123.962549,248.109956 Z M248.107454,123.961885 L197.070361,175.00028 C177.213633,194.857514 144.880147,194.857514 125.000357,174.977217 C124.469922,174.446769 123.939487,173.893257 123.432114,173.339745 C123.132303,173.086052 122.855554,172.832359 122.578805,172.555603 C121.771621,171.748399 121.102811,170.872005 120.572376,169.926423 C120.503189,169.834171 120.434002,169.764982 120.387877,169.67273 C120.387877,169.67273 120.410939,169.649667 120.434002,169.649667 C117.989387,165.037069 118.704322,159.17907 122.601867,155.304488 C126.522476,151.383779 132.42645,150.69189 137.038931,153.205756 C137.361804,152.859811 140.567478,156.065566 142.251033,157.749164 L142.274096,157.772227 C152.652176,168.150573 169.395479,168.242825 179.750497,157.864479 L230.879841,106.733832 C241.257921,96.355487 241.257921,79.5425678 230.879841,69.1642226 L230.879841,69.1411597 C220.50176,58.7628145 203.68927,58.7628145 193.311189,69.1411597 L162.499821,99.9071873 C151.844992,94.6949518 139.252921,94.4873849 128.48278,99.4459275 L176.037451,51.8900437 C195.894178,32.0328099 228.227665,32.0328099 248.107454,51.9131067 C267.964182,71.7703404 267.964182,104.104651 248.107454,123.961885 L248.107454,123.961885 L248.107454,123.961885 Z" id="Shape" fill={props.fill} fillRule="nonzero"></path>
	    	</g>
		</svg>
	)
}

CopyIcon.propTypes = {
	fill: PropTypes.string
}

function InviteIcon(props) {
	return (
		<svg width="300px" height="300px" viewBox="0 0 300 300" version="1.1" xmlns="http://www.w3.org/2000/svg">
		    <title>Artboard</title>
		    <g id="Artboard" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
		        <path d="M151,153 C182.490618,153 208,127.494781 208,96 C208,64.5448852 182.490618,39 151,39 C119.509382,39 94,64.5052192 94,96 C94,127.494781 119.548992,153 151,153 Z M200.2219,161.07984 L195.64731,161.03992 C194.069865,161.03992 191.664262,161.638723 190.244561,162.397206 C190.244561,162.397206 186.616438,164.512974 183.303804,165.9501 C173.405338,170.261477 162.126607,172.736527 150.177463,172.736527 C138.267754,172.736527 127.02846,170.301397 117.169429,166.02994 C113.817359,164.552894 110.110364,162.397206 110.110364,162.397206 C108.730099,161.638723 106.324496,161 104.707615,161 L100.211897,161.03992 C82.1107177,163.43513 63.1025074,179.682635 57.6603227,197.287425 C57.6603227,197.287425 51.8632129,209.143713 51.0350543,232.457086 C50.9561821,234.213573 51.0350543,232.457086 51.0350543,232.457086 C50.9956182,235.491018 53.4012216,239.363273 56.5166751,241 C56.5166751,241 87.3162857,261 150.019718,261 C212.72315,261 243.522761,240.96008 243.522761,240.96008 C246.598778,239.283433 249.043818,235.051896 248.964946,232.377246 C248.964946,232.377246 249.043818,234.133733 248.964946,232.377246 C248.176223,209.183633 242.536858,197.806387 242.536858,197.806387 C237.567907,180.121756 218.244207,163.754491 200.2219,161.07984 Z" id="Shape" fill={props.fill} fillRule="nonzero"></path>
		        <g id="Group" transform="translate(218.000000, 30.000000)" fill={props.fill}>
		            <rect id="Rectangle" x="23" y="0" width="16" height="62"></rect>
		            <polygon id="Rectangle" transform="translate(31.500000, 31.000000) rotate(90.000000) translate(-31.500000, -31.000000) " points="24 -5.00766095e-13 39 -5.00766095e-13 39 62 24 62"></polygon>
		        </g>
		    </g>
		</svg>
	)
}

InviteIcon.propTypes = {
	fill: PropTypes.string
}
